/*Список
Объекты могут быть использованы для построения различных структур данных. 
Часто встречающаяся структура – список (не путайте с массивом). 
Список – связанный набор объектов, где первый объект содержит ссылку на второй, второй – на третий,
и т.п.
Списки удобны тем, что они могут делиться частью своей структуры. 
Например, можно сделать два списка, {value: 0, rest: list} и {value: -1, rest: list}, 
где list – это ссылка на ранее объявленную переменную. Это два независимых списка,
при этом у них есть общая структура list, которая включает три последних элемента каждого из них.
Кроме того, оригинальный список также сохраняет свои свойства как отдельный список из трёх элементов.
Напишите функцию arrayToList, которая строит такую структуру, получая в качестве аргумента [1, 2, 3],
а также функцию listToArray, которая создаёт массив из списка. 
Также напишите вспомогательную функцию prepend, которая получает элемент и создаёт новый список, 
где этот элемент добавлен спереди к первоначальному списку, и функцию nth, 
которая в качестве аргументов принимает список и число, а возвращает элемент на заданной позиции 
в списке или же undefined в случае отсутствия такого элемента.
Если ваша версия nth не рекурсивна, тогда напишите её рекурсивную версию.
*/

//Преобразование массива в Список

function arrayToList(arr) {

  var list = {
      value: arr[0],
      rest: null
  }

  var list1 = list;

  for (i = 1; i < arr.length; i++) {
      list.rest = new Object();
      list.rest.value = arr[i];
      list.rest.rest = null;
      list = list.rest;
  }

  return list1;

}

// Преобразуем список в массив

function listToArray(list) {
  var arr = [];

  arr.push(list.value);
  while (list.rest != null) {
      list = list.rest;
      arr.push(list.value);
  }

  return arr;
}

//Вспомогательная функция prepend, которая получает элемент и создаёт новый список,
//где этот элемент добавлен спереди к первоначальному списку
// Добавляем элемент el вначале списка list


function prepend(list, el) {

  el.rest = list;
  return el;

}

/*Функция nth, которая в качестве аргументов принимает список и число, 
а возвращает элемент на заданной позиции 
в списке или же undefined в случае отсутствия такого элемента.
Если ваша версия nth не рекурсивна, тогда напишите её рекурсивную версию.*/

// Из списка list берем элемент N
// Нумерация начинается с 0


function nth(list, N) {

  var i = 0;

  while (i < N && list.rest != null) {
      list = list.rest;
      i++;
  }

  if (N > i)
      return "undefined";

  return list;
}

l = arrayToList([1, 21, 34, 4]);

console.log(listToArray(l));
console.log(l.value, l.rest.value, l.rest.rest.value, l.rest.rest.rest.value);
console.log(nth(l, 4));

var el = {
  value: 23,
  rest: null
}

l = prepend(l, el);
console.log(listToArray(l));

console.log(nth(l, 4));